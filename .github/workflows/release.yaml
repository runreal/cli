name: 'Release'

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

env:
  DENO_DIR: ~/.deno-cache

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        deno-version: [2.3.1]

    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GH_RUNREAL_TOKEN }}

      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}

      - name: Setup Deno ${{ matrix.deno-version }}
        if: ${{ steps.release.outputs.release_created }}
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Deno Compile [windows]
        if: ${{ steps.release.outputs.release_created }}
        run: deno task compile-win

      - name: Deno Compile [macos]
        if: ${{ steps.release.outputs.release_created }}
        run: deno task compile-macos

      - name: Deno Compile [linux]
        if: ${{ steps.release.outputs.release_created }}
        run: deno task compile-linux

      - name: Upload Artifacts
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./build/runreal-win-x64.exe ./build/runreal-macos-arm ./build/runreal-linux-x64 schema.json
